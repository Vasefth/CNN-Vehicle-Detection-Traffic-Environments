# -*- coding: utf-8 -*-
"""YOLOv9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qus84JAlYniNxvYIsYSvG9-GfeVMJKlW
"""

# install ultralytics
!pip install ultralytics
!pip install -U ray[tune]

!pip install ultralytics

from ultralytics import YOLO
import os
import random
import shutil
import numpy as np
import pandas as pd
import cv2
import yaml
import matplotlib.pyplot as plt
import glob
from sklearn.model_selection import train_test_split

"""# setting parameters"""

from google.colab import drive
drive.mount('/content/drive')

DIR = "/content/drive/My Drive/working/datasets/cars/"
IMAGES = DIR +"images/"
LABELS = DIR +"labels/"

TRAIN = "/content/drive/My Drive/data/training_images"
TEST = "/content/drive/My Drive/data/testing_images"



df = pd.read_csv("/content/drive/My Drive/data/train_solution_bounding_boxes (1).csv")
df

"""# setting dataset"""

files = list(df.image.unique())

files_train, files_valid = train_test_split(files, test_size = 0.2)

# !rm -r /kaggle/working/dataset

# make directories
os.makedirs(IMAGES+"train", exist_ok=True)
os.makedirs(LABELS+"train", exist_ok=True)
os.makedirs(IMAGES+"valid", exist_ok=True)
os.makedirs(LABELS+"valid", exist_ok=True)

train_filename = set(files_train)
valid_filename = set(files_valid)
for file in glob.glob(TRAIN+"/*"):
    fname =os.path.basename(file)
    if fname in train_filename:
        shutil.copy(file, IMAGES+"train")
    elif fname in valid_filename:
        shutil.copy(file, IMAGES+"valid")

for _, row in df.iterrows():
    image_file = row['image']
    class_id = "0"
    x = row['xmin']
    y = row['ymin']
    width = row['xmax'] - row['xmin']
    height = row['ymax'] - row['ymin']

    x_center = x + (width / 2)
    y_center = y + (height / 2)
    x_center /= 676
    y_center /= 380
    width /= 676
    height /= 380

    if image_file in train_filename:
        annotation_file = os.path.join(LABELS) + "train/" + image_file.replace('.jpg', '.txt')
    else:
        annotation_file = os.path.join(LABELS) + "valid/" + image_file.replace('.jpg', '.txt')

    with open(annotation_file, 'a') as ann_file:
        ann_file.write(f"{class_id} {x_center} {y_center} {width} {height}\n")

"""# setup yaml file"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile dataset.yaml
# # Path
# path: /content/drive/My Drive/working/datasets/cars
# train: images/train
# val: images/valid
# 
# # Classes
# nc: 1
# names: ['car']

# Content of dataset.yaml
dataset_yaml_content = """
# Dataset paths
path: /content/drive/My Drive/working/datasets/cars
train: /content/drive/My Drive/working/datasets/cars/images/train
val: /content/drive/My Drive/working/datasets/cars/images/valid

# Number of classes
nc: 1

# Class names
names:
  0: car
"""

# Write the content to both directories
with open('/content/drive/My Drive/working/datasets/cars/images/train/dataset.yaml', 'w') as file:
    file.write(dataset_yaml_content)

with open('/content/drive/My Drive/working/datasets/cars/images/valid/dataset.yaml', 'w') as file:
    file.write(dataset_yaml_content)

print("dataset.yaml has been written successfully to both directories.")

"""# disable wandb"""

# Install wandb if not already installed
!pip install wandb

# Disable wandb
import wandb
wandb.init(mode="disabled")

"""# Train"""

model = YOLO('yolov9c.pt')
model.train(data="dataset.yaml", epochs=100, batch=8)

from IPython.display import Image

Image("/content/drive/My Drive/working/runs/detect/train/results.png")

"""# inference (test)"""

model = YOLO('./runs/detect/train/weights/last.pt')
ret = model("/content/drive/My Drive/data/testing_images",save=True, conf=0.2, iou=0.5)

# display result
files = glob.glob("./runs/detect/predict/*")
for i in range(0, 30, 3):
    img = Image(files[i])
    display(img)



